/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const VerifyLazyImport = createFileRoute('/verify')()
const PostLazyImport = createFileRoute('/post')()
const NotificationsLazyImport = createFileRoute('/notifications')()
const HistoryLazyImport = createFileRoute('/history')()
const AuthLazyImport = createFileRoute('/auth')()
const IndexLazyImport = createFileRoute('/')()
const ProfileIndexLazyImport = createFileRoute('/profile/')()
const ProfileSetupLazyImport = createFileRoute('/profile/setup')()

// Create/Update Routes

const VerifyLazyRoute = VerifyLazyImport.update({
  path: '/verify',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/verify.lazy').then((d) => d.Route))

const PostLazyRoute = PostLazyImport.update({
  path: '/post',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/post.lazy').then((d) => d.Route))

const NotificationsLazyRoute = NotificationsLazyImport.update({
  path: '/notifications',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/notifications.lazy').then((d) => d.Route))

const HistoryLazyRoute = HistoryLazyImport.update({
  path: '/history',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/history.lazy').then((d) => d.Route))

const AuthLazyRoute = AuthLazyImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ProfileIndexLazyRoute = ProfileIndexLazyImport.update({
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile/index.lazy').then((d) => d.Route))

const ProfileSetupLazyRoute = ProfileSetupLazyImport.update({
  path: '/profile/setup',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile/setup.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      preLoaderRoute: typeof AuthLazyImport
      parentRoute: typeof rootRoute
    }
    '/history': {
      preLoaderRoute: typeof HistoryLazyImport
      parentRoute: typeof rootRoute
    }
    '/notifications': {
      preLoaderRoute: typeof NotificationsLazyImport
      parentRoute: typeof rootRoute
    }
    '/post': {
      preLoaderRoute: typeof PostLazyImport
      parentRoute: typeof rootRoute
    }
    '/verify': {
      preLoaderRoute: typeof VerifyLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile/setup': {
      preLoaderRoute: typeof ProfileSetupLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      preLoaderRoute: typeof ProfileIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AuthLazyRoute,
  HistoryLazyRoute,
  NotificationsLazyRoute,
  PostLazyRoute,
  VerifyLazyRoute,
  ProfileSetupLazyRoute,
  ProfileIndexLazyRoute,
])

/* prettier-ignore-end */
